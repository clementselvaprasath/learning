{"version":3,"sources":["Webpack.ts"],"names":["HOST","getenv","string","DEFAULT_PORT","int","WEBPACK_LOG_TAG","webpackDevServerInstance","webpackServerPort","restartAsync","projectRoot","options","stopAsync","startAsync","PLATFORM_TAG","ProjectUtils","getPlatformTag","withTag","messages","join","devServerInfo","printConnectionInstructions","appName","urls","showInDevtools","showHelp","deprecatedVerbose","XDLError","usingNextJs","getProjectUseNextJsAsync","unimodulesOnly","serverName","logError","chalk","red","fullOptions","transformCLIOptions","env","getWebpackConfigEnvFromBundlingOptionsAsync","config","createWebpackConfigAsync","port","getAvailablePortAsync","defaultPort","logInfo","underline","mode","protocol","https","useYarn","ConfigUtils","isUsingYarn","getProjectNameAsync","nonInteractive","validateBoolOption","process","stdout","isTTY","server","Error","startNextJsAsync","dev","isFirstCompile","Promise","resolve","compiler","webpackFactory","webpack","onFinished","WebpackDevServer","devServer","listen","error","message","onWebpackFinished","ProjectSettings","setPackagerInfoAsync","host","ip","address","url","close","openAsync","Web","openProjectAsync","compileWebAppAsync","warnings","reject","run","stats","errors","_showErrors","_showWarnings","toJson","all","length","CI","toLowerCase","logWarning","yellow","bundleWebAppAsync","green","bundleAsync","isUsingNextJs","bundleNextJsAsync","exp","readConfigJsonAsync","webName","getNameFromConfig","use","web","getServer","getPort","getUrlAsync","getProtocolAsync","readAsync","setMode","BABEL_ENV","NODE_ENV","name","value","defaultValue","isImageEditingEnabled","pwa","withUnimodules","require","invokeWebpackConfigAsync","applyOptionsToProjectSettingsAsync","newSettings","Object","keys","setAsync","isDebugInfoEnabled","isInfoEnabled","info","webpackEnv","next","resolveModule","_copyCustomNextJsTemplatesAsync","app","dir","handle","getRequestHandler","prepare","get","req","res","sendFile","path","serviceWorkerPath","fs","existsSync","err","toString","nextBuild","default","pagesDocument","writeFile","nextJsImportDocument","e","staticFolder","mkdirSync","copyFile"],"mappings":"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","sourcesContent":["import * as ConfigUtils from '@expo/config';\nimport chalk from 'chalk';\nimport express from 'express';\nimport fs from 'fs-extra';\nimport getenv from 'getenv';\nimport http from 'http';\nimport path from 'path';\nimport formatWebpackMessages from 'react-dev-utils/formatWebpackMessages';\nimport { choosePort, prepareUrls, Urls } from 'react-dev-utils/WebpackDevServerUtils';\nimport webpack from 'webpack';\nimport WebpackDevServer from 'webpack-dev-server';\n\nimport createWebpackCompiler, {\n  printInstructions,\n  printSuccessMessages,\n} from './createWebpackCompiler';\nimport ip from './ip';\n\nimport * as ProjectUtils from './project/ProjectUtils';\nimport * as ProjectSettings from './ProjectSettings';\nimport * as Web from './Web';\nimport XDLError from './XDLError';\n\n// @ts-ignore missing types for Doctor until it gets converted to TypeScript\nexport const HOST = getenv.string('WEB_HOST', '0.0.0.0');\nexport const DEFAULT_PORT = getenv.int('WEB_PORT', 19006);\nconst WEBPACK_LOG_TAG = 'expo';\n\nexport type DevServer = WebpackDevServer | http.Server;\n\nlet webpackDevServerInstance: DevServer | null = null;\nlet webpackServerPort: number | null = null;\n\ninterface WebpackSettings {\n  url: string;\n  server: DevServer;\n  port: number;\n  protocol: 'http' | 'https';\n  host?: string;\n}\n\ntype CLIWebOptions = {\n  dev?: boolean;\n  pwa?: boolean;\n  nonInteractive?: boolean;\n  port?: number;\n  unimodulesOnly?: boolean;\n  onWebpackFinished?: (error?: Error) => void;\n};\n\ntype BundlingOptions = {\n  dev?: boolean;\n  pwa?: boolean;\n  isImageEditingEnabled?: boolean;\n  isDebugInfoEnabled?: boolean;\n  webpackEnv?: Object;\n  mode?: 'development' | 'production' | 'test' | 'none';\n  https?: boolean;\n  nonInteractive?: boolean;\n  unimodulesOnly?: boolean;\n  onWebpackFinished?: (error?: Error) => void;\n};\n\nexport async function restartAsync(\n  projectRoot: string,\n  options: BundlingOptions = {}\n): Promise<WebpackSettings | null> {\n  await stopAsync(projectRoot);\n  return await startAsync(projectRoot, options);\n}\n\nconst PLATFORM_TAG = ProjectUtils.getPlatformTag('web');\nconst withTag = (...messages: any[]) => [PLATFORM_TAG + ' ', ...messages].join('');\n\nlet devServerInfo: {\n  urls: Urls;\n  protocol: 'http' | 'https';\n  useYarn: boolean;\n  appName: string;\n  nonInteractive: boolean;\n  port: number;\n} | null = null;\n\nexport function printConnectionInstructions(projectRoot: string, options = {}) {\n  if (!devServerInfo) return;\n  printInstructions(projectRoot, {\n    appName: devServerInfo.appName,\n    urls: devServerInfo.urls,\n    showInDevtools: false,\n    showHelp: false,\n    ...options,\n  });\n}\n\nexport async function startAsync(\n  projectRoot: string,\n  options: CLIWebOptions = {},\n  deprecatedVerbose?: boolean\n): Promise<WebpackSettings | null> {\n  if (typeof deprecatedVerbose !== 'undefined') {\n    throw new XDLError(\n      'WEBPACK_DEPRECATED',\n      'startAsync(root, options, verbose): The `verbose` option is deprecated.'\n    );\n  }\n\n  const usingNextJs = await getProjectUseNextJsAsync(projectRoot);\n  options.unimodulesOnly = usingNextJs;\n  let serverName = 'Webpack';\n  if (usingNextJs) {\n    serverName = 'Next.js';\n  }\n\n  if (webpackDevServerInstance) {\n    ProjectUtils.logError(\n      projectRoot,\n      WEBPACK_LOG_TAG,\n      withTag(chalk.red(`${serverName} is already running.`))\n    );\n    return null;\n  }\n\n  const fullOptions = transformCLIOptions(options);\n\n  const env = await getWebpackConfigEnvFromBundlingOptionsAsync(projectRoot, fullOptions);\n\n  const config = await createWebpackConfigAsync(env, fullOptions);\n\n  const port = await getAvailablePortAsync({\n    defaultPort: options.port,\n  });\n  webpackServerPort = port;\n\n  ProjectUtils.logInfo(\n    projectRoot,\n    WEBPACK_LOG_TAG,\n    withTag(\n      `Starting ${serverName} on port ${webpackServerPort} in ${chalk.underline(env.mode)} mode.`\n    )\n  );\n\n  const protocol = env.https ? 'https' : 'http';\n  const urls = prepareUrls(protocol, '::', webpackServerPort);\n  const useYarn = ConfigUtils.isUsingYarn(projectRoot);\n  const appName = await getProjectNameAsync(projectRoot);\n  const nonInteractive = validateBoolOption(\n    'nonInteractive',\n    options.nonInteractive,\n    !process.stdout.isTTY\n  );\n\n  let server: DevServer;\n  if (usingNextJs) {\n    if (protocol === 'https') {\n      // TODO: Support https.\n      throw new Error('https with Next.js is not supported for now.');\n    }\n    server = await startNextJsAsync({\n      projectRoot,\n      port: webpackServerPort,\n      dev: env.mode !== 'production',\n    });\n    printSuccessMessages({\n      projectRoot,\n      appName,\n      urls,\n      config,\n      isFirstCompile: true,\n      nonInteractive,\n    });\n  } else {\n    devServerInfo = {\n      urls,\n      protocol,\n      useYarn,\n      appName,\n      nonInteractive,\n      port: webpackServerPort!,\n    };\n\n    server = await new Promise(resolve => {\n      // Create a webpack compiler that is configured with custom messages.\n      const compiler = createWebpackCompiler({\n        projectRoot,\n        appName,\n        config,\n        urls,\n        nonInteractive,\n        webpackFactory: webpack,\n        onFinished: () => resolve(server),\n      });\n      const server = new WebpackDevServer(compiler, config.devServer);\n      // Launch WebpackDevServer.\n      server.listen(port, HOST, error => {\n        if (error) {\n          ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, error.message);\n        }\n        if (typeof options.onWebpackFinished === 'function') {\n          options.onWebpackFinished(error);\n        }\n      });\n      webpackDevServerInstance = server;\n    });\n  }\n  await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n    webpackServerPort,\n  });\n\n  const host = ip.address();\n  const url = `${protocol}://${host}:${webpackServerPort}`;\n  return {\n    url,\n    server,\n    port,\n    protocol,\n    host,\n  };\n}\n\nexport async function stopAsync(projectRoot: string): Promise<void> {\n  if (webpackDevServerInstance) {\n    ProjectUtils.logInfo(projectRoot, WEBPACK_LOG_TAG, '\\u203A Closing Webpack server');\n    webpackDevServerInstance.close();\n    webpackDevServerInstance = null;\n    devServerInfo = null;\n    webpackServerPort = null;\n    await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n      webpackServerPort: null,\n    });\n  }\n}\n\nexport async function openAsync(projectRoot: string, options?: BundlingOptions): Promise<void> {\n  if (!webpackDevServerInstance) {\n    await startAsync(projectRoot, options);\n  }\n  await Web.openProjectAsync(projectRoot);\n}\n\nexport async function compileWebAppAsync(\n  projectRoot: string,\n  compiler: webpack.Compiler\n): Promise<any> {\n  // We generate the stats.json file in the webpack-config\n  const { warnings } = await new Promise((resolve, reject) =>\n    compiler.run((error, stats) => {\n      let messages;\n      if (error) {\n        if (!error.message) {\n          return reject(error);\n        }\n        messages = formatWebpackMessages({\n          errors: [error.message],\n          warnings: [],\n          _showErrors: true,\n          _showWarnings: true,\n        });\n      } else {\n        messages = formatWebpackMessages(\n          stats.toJson({ all: false, warnings: true, errors: true })\n        );\n      }\n\n      if (messages.errors.length) {\n        // Only keep the first error. Others are often indicative\n        // of the same problem, but confuse the reader with noise.\n        if (messages.errors.length > 1) {\n          messages.errors.length = 1;\n        }\n        return reject(new Error(messages.errors.join('\\n\\n')));\n      }\n      if (\n        process.env.CI &&\n        (typeof process.env.CI !== 'string' || process.env.CI.toLowerCase() !== 'false') &&\n        messages.warnings.length\n      ) {\n        ProjectUtils.logWarning(\n          projectRoot,\n          WEBPACK_LOG_TAG,\n          withTag(\n            chalk.yellow(\n              '\\nTreating warnings as errors because process.env.CI = true.\\n' +\n                'Most CI servers set it automatically.\\n'\n            )\n          )\n        );\n        return reject(new Error(messages.warnings.join('\\n\\n')));\n      }\n      resolve({\n        warnings: messages.warnings,\n      });\n    })\n  );\n  return { warnings };\n}\n\nexport async function bundleWebAppAsync(projectRoot: string, config: Web.WebpackConfiguration) {\n  const compiler = webpack(config);\n\n  try {\n    const { warnings } = await compileWebAppAsync(projectRoot, compiler);\n    if (warnings.length) {\n      ProjectUtils.logWarning(\n        projectRoot,\n        WEBPACK_LOG_TAG,\n        withTag(chalk.yellow('Compiled with warnings.\\n'))\n      );\n      ProjectUtils.logWarning(projectRoot, WEBPACK_LOG_TAG, warnings.join('\\n\\n'));\n    } else {\n      ProjectUtils.logInfo(\n        projectRoot,\n        WEBPACK_LOG_TAG,\n        withTag(chalk.green('Compiled successfully.\\n'))\n      );\n    }\n  } catch (error) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, withTag(chalk.red('Failed to compile.\\n')));\n    throw error;\n  }\n}\n\nexport async function bundleAsync(projectRoot: string, options?: BundlingOptions): Promise<void> {\n  const isUsingNextJs = await getProjectUseNextJsAsync(projectRoot);\n\n  const fullOptions = transformCLIOptions({\n    ...options,\n    unimodulesOnly: isUsingNextJs,\n  });\n\n  const env = await getWebpackConfigEnvFromBundlingOptionsAsync(projectRoot, {\n    ...fullOptions,\n    // Force production\n    mode: 'production',\n  });\n\n  const config = await createWebpackConfigAsync(env, fullOptions);\n\n  if (isUsingNextJs) {\n    await bundleNextJsAsync(projectRoot);\n  } else {\n    await bundleWebAppAsync(projectRoot, config);\n  }\n}\n\nexport async function getProjectNameAsync(projectRoot: string): Promise<string> {\n  const { exp } = await ConfigUtils.readConfigJsonAsync(projectRoot, true);\n  const { webName } = ConfigUtils.getNameFromConfig(exp);\n  return webName;\n}\n\nexport async function getProjectUseNextJsAsync(projectRoot: string): Promise<boolean> {\n  const { exp } = await ConfigUtils.readConfigJsonAsync(projectRoot, true);\n  const { use = null } = exp.web || {};\n  return use === 'nextjs';\n}\n\nexport function getServer(projectRoot: string): DevServer | null {\n  if (webpackDevServerInstance == null) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, withTag('Webpack is not running.'));\n  }\n  return webpackDevServerInstance;\n}\n\nexport function getPort(): number | null {\n  return webpackServerPort;\n}\n\nexport async function getUrlAsync(projectRoot: string): Promise<string | null> {\n  const devServer = getServer(projectRoot);\n  if (!devServer) {\n    return null;\n  }\n  const host = ip.address();\n  const protocol = await getProtocolAsync(projectRoot);\n  return `${protocol}://${host}:${webpackServerPort}`;\n}\n\nexport async function getProtocolAsync(projectRoot: string): Promise<'http' | 'https'> {\n  // TODO: Bacon: Handle when not in expo\n  const { https } = await ProjectSettings.readAsync(projectRoot);\n  return https === true ? 'https' : 'http';\n}\n\nexport async function getAvailablePortAsync(\n  options: { host?: string; defaultPort?: number } = {}\n): Promise<number> {\n  try {\n    const defaultPort =\n      'defaultPort' in options && options.defaultPort ? options.defaultPort : DEFAULT_PORT;\n    const port = await choosePort(\n      'host' in options && options.host ? options.host : HOST,\n      defaultPort\n    );\n    if (!port) throw new Error(`Port ${defaultPort} not available.`);\n    else return port;\n  } catch (error) {\n    throw new XDLError('NO_PORT_FOUND', 'No available port found: ' + error.message);\n  }\n}\n\nexport function setMode(mode: 'development' | 'production' | 'test' | 'none'): void {\n  process.env.BABEL_ENV = mode;\n  process.env.NODE_ENV = mode;\n}\n\nfunction validateBoolOption(name: string, value: unknown, defaultValue: boolean): boolean {\n  if (typeof value === 'undefined') {\n    value = defaultValue;\n  }\n\n  if (typeof value !== 'boolean') {\n    throw new XDLError('WEBPACK_INVALID_OPTION', `'${name}' option must be a boolean.`);\n  }\n\n  return value;\n}\n\nfunction transformCLIOptions(options: CLIWebOptions): BundlingOptions {\n  // Transform the CLI flags into more explicit values\n  return {\n    ...options,\n    isImageEditingEnabled: options.pwa,\n  };\n}\n\nasync function createWebpackConfigAsync(\n  env: Web.WebEnvironment,\n  options: CLIWebOptions = {}\n): Promise<Web.WebpackConfiguration> {\n  setMode(env.mode);\n\n  let config;\n  if (options.unimodulesOnly) {\n    const withUnimodules = require('@expo/webpack-config/withUnimodules');\n    config = withUnimodules({}, env);\n  } else {\n    config = await Web.invokeWebpackConfigAsync(env);\n  }\n\n  return config;\n}\n\nasync function applyOptionsToProjectSettingsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n): Promise<ProjectSettings.Settings> {\n  let newSettings: Partial<ProjectSettings.Settings> = {};\n  // Change settings before reading them\n  if (typeof options.https === 'boolean') {\n    newSettings.https = options.https;\n  }\n\n  if (Object.keys(newSettings).length) {\n    await ProjectSettings.setAsync(projectRoot, newSettings);\n  }\n\n  return await ProjectSettings.readAsync(projectRoot);\n}\n\nasync function getWebpackConfigEnvFromBundlingOptionsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n): Promise<Web.WebEnvironment> {\n  let { dev, https } = await applyOptionsToProjectSettingsAsync(projectRoot, options);\n\n  const mode = typeof options.mode === 'string' ? options.mode : dev ? 'development' : 'production';\n\n  const isImageEditingEnabled = validateBoolOption(\n    'isImageEditingEnabled',\n    options.isImageEditingEnabled,\n    true\n  );\n  const isDebugInfoEnabled = validateBoolOption(\n    'isDebugInfoEnabled',\n    options.isDebugInfoEnabled,\n    Web.isInfoEnabled()\n  );\n\n  return {\n    projectRoot,\n    pwa: isImageEditingEnabled,\n    mode,\n    https,\n    info: isDebugInfoEnabled,\n    ...(options.webpackEnv || {}),\n  };\n}\n\nasync function startNextJsAsync({\n  projectRoot,\n  port,\n  dev,\n}: {\n  projectRoot: string;\n  port: number;\n  dev: boolean;\n}): Promise<DevServer> {\n  const { exp } = await ConfigUtils.readConfigJsonAsync(projectRoot, true);\n\n  let next;\n  try {\n    next = require(ConfigUtils.resolveModule('next', projectRoot, exp));\n  } catch {\n    throw new XDLError(\n      'NEXTJS_NOT_INSTALLED',\n      'Next.js is not installed in your app. See https://docs.expo.io/versions/latest/guides/using-nextjs/'\n    );\n  }\n\n  // Build first if in production mode.\n  // https://nextjs.org/docs#custom-server-and-routing\n  if (!dev) {\n    await bundleNextJsAsync(projectRoot);\n  }\n\n  await _copyCustomNextJsTemplatesAsync(projectRoot);\n\n  const app = next({\n    dev,\n    dir: projectRoot,\n  });\n  const handle = app.getRequestHandler();\n\n  await app.prepare();\n\n  const server = express();\n\n  server.get('/expo-service-worker.js', (req, res) => {\n    res.sendFile(path.resolve(projectRoot, 'static', 'expo-service-worker.js'));\n  });\n\n  server.get('/service-worker.js', (req, res) => {\n    // This file should be provided by https://github.com/hanford/next-offline if installed.\n    const serviceWorkerPath = path.resolve(projectRoot, '.next', 'service-worker.js');\n    if (!fs.existsSync(serviceWorkerPath)) {\n      // Simply return a blank service worker file if the user is not using `next-offline`.\n      res.sendFile(path.resolve(projectRoot, 'static', 'service-worker.js'));\n      return;\n    }\n    res.sendFile(serviceWorkerPath);\n  });\n\n  server.get('*', handle);\n\n  webpackDevServerInstance = server.listen(port, err => {\n    if (err) {\n      throw new Error(`Express server failed to start: ${err.toString()}`);\n    }\n  });\n\n  return webpackDevServerInstance;\n}\n\nasync function bundleNextJsAsync(projectRoot: string) {\n  const { exp } = await ConfigUtils.readConfigJsonAsync(projectRoot, true);\n\n  let nextBuild;\n  try {\n    nextBuild = require(ConfigUtils.resolveModule('next/dist/build', projectRoot, exp)).default;\n  } catch {\n    throw new XDLError(\n      'NEXTJS_NOT_INSTALLED',\n      'Next.js (or its build component) is not installed in your app. See https://docs.expo.io/versions/latest/guides/using-nextjs/'\n    );\n  }\n\n  await _copyCustomNextJsTemplatesAsync(projectRoot);\n  await nextBuild(projectRoot);\n}\n\nasync function _copyCustomNextJsTemplatesAsync(projectRoot: string) {\n  // TODO(Bacon): Ensure @expo/next-adapter is installed\n  const pagesDocument = path.join(projectRoot, 'pages', '_document.js');\n  if (!fs.existsSync(pagesDocument)) {\n    // Only write to `pages/_document.js` if it doesn't exists.\n    try {\n      await fs.writeFile(pagesDocument, nextJsImportDocument);\n    } catch (e) {\n      throw new Error(`Could not write to pages/_document.js: ${e.toString()}`);\n    }\n  }\n\n  // TODO: Use `public/` folder when Next.js eventually deprecates `static/` folder.\n  const staticFolder = path.join(projectRoot, 'static');\n  if (!fs.existsSync(staticFolder)) {\n    fs.mkdirSync(staticFolder);\n  }\n\n  try {\n    await fs.copyFile(\n      require.resolve('@expo/webpack-config/web-default/expo-service-worker.js'),\n      path.join(staticFolder, 'expo-service-worker.js')\n    );\n  } catch (e) {\n    throw new Error(`Could not copy expo-service-worker.js: ${e.toString()}`);\n  }\n\n  const serviceWorkerPath = path.join(staticFolder, 'service-worker.js');\n  if (!fs.existsSync(serviceWorkerPath)) {\n    // Write a blank service-worker.js file for users who do not use any other service worker.\n    try {\n      await fs.writeFile(serviceWorkerPath, '');\n    } catch (e) {\n      throw new Error(`Could not write to service-worker.js: ${e.toString()}`);\n    }\n  }\n}\n\nconst nextJsImportDocument = `\\\nimport { Document } from '@expo/next-adapter';\nexport default Document;\n`;\n"],"file":"../Webpack.js","sourceRoot":"/@expo/xdl@56.4.1/src"}